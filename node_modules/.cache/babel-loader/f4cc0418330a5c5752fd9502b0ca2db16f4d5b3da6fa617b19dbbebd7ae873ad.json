{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Aminne\\\\UpHabit\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [displayedValue, setDisplayedValue] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false); // Etat pour savoir si le formulaire a été soumis\n  const [isTranslated, setIsTranslated] = useState(false); // Etat pour la translation\n\n  // Fonction de gestion de la saisie\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Fonction pour afficher l'entrée et cacher le formulaire, tout en activant la translation\n  const handleDisplayInput = () => {\n    if (inputValue.trim() === '') {\n      alert('Please enter a habit before submitting!');\n    } else {\n      setDisplayedValue(inputValue);\n      setInputValue(''); // Effacer la valeur de l'input\n      setIsSubmitted(true); // Masquer le formulaire après soumission\n      setIsTranslated(true); // Activer la translation\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `category-container ${isTranslated ? 'translated' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-body-container\",\n        children: [!isSubmitted && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add new bad Habit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 28\n        }, this), !isSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type something...\",\n            value: inputValue,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDisplayInput,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Output: \", displayedValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LhaPooeTB5z/ROSy2swBdhcBIDI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputValue","setInputValue","displayedValue","setDisplayedValue","isSubmitted","setIsSubmitted","isTranslated","setIsTranslated","handleInputChange","event","target","value","handleDisplayInput","trim","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Aminne/UpHabit/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nconst App = () => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [displayedValue, setDisplayedValue] = useState('');\r\n  const [isSubmitted, setIsSubmitted] = useState(false); // Etat pour savoir si le formulaire a été soumis\r\n  const [isTranslated, setIsTranslated] = useState(false); // Etat pour la translation\r\n\r\n  // Fonction de gestion de la saisie\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  // Fonction pour afficher l'entrée et cacher le formulaire, tout en activant la translation\r\n  const handleDisplayInput = () => {\r\n    if (inputValue.trim() === '') {\r\n      alert('Please enter a habit before submitting!');\r\n    } else {\r\n      setDisplayedValue(inputValue);\r\n      setInputValue(''); // Effacer la valeur de l'input\r\n      setIsSubmitted(true); // Masquer le formulaire après soumission\r\n      setIsTranslated(true); // Activer la translation\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='categories-container'>\r\n      <div className={`category-container ${isTranslated ? 'translated' : ''}`}>\r\n        {/* <img /> */}\r\n        <div className='category-body-container'>\r\n          {!isSubmitted && <h2>Add new bad Habit</h2>}\r\n\r\n          {/* Afficher le champ de saisie et le bouton seulement si le formulaire n'a pas été soumis */}\r\n          {!isSubmitted ? (\r\n            <>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Type something...\" \r\n                value={inputValue}\r\n                onChange={handleInputChange} \r\n              />\r\n              <button onClick={handleDisplayInput}>Submit</button>\r\n            </>\r\n          ) : (\r\n            <p>Output: {displayedValue}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzD;EACA,MAAMe,iBAAiB,GAAIC,KAAK,IAAK;IACnCR,aAAa,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIZ,UAAU,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5BC,KAAK,CAAC,yCAAyC,CAAC;IAClD,CAAC,MAAM;MACLX,iBAAiB,CAACH,UAAU,CAAC;MAC7BC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;MACnBI,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;MACtBE,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKoB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnCrB,OAAA;MAAKoB,SAAS,EAAE,sBAAsBT,YAAY,GAAG,YAAY,GAAG,EAAE,EAAG;MAAAU,QAAA,eAEvErB,OAAA;QAAKoB,SAAS,EAAC,yBAAyB;QAAAC,QAAA,GACrC,CAACZ,WAAW,iBAAIT,OAAA;UAAAqB,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAG1C,CAAChB,WAAW,gBACXT,OAAA,CAAAE,SAAA;UAAAmB,QAAA,gBACErB,OAAA;YACE0B,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,mBAAmB;YAC/BX,KAAK,EAAEX,UAAW;YAClBuB,QAAQ,EAAEf;UAAkB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACFzB,OAAA;YAAQ6B,OAAO,EAAEZ,kBAAmB;YAAAI,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eACpD,CAAC,gBAEHzB,OAAA;UAAAqB,QAAA,GAAG,UAAQ,EAACd,cAAc;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAC/B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhDID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAkDT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}