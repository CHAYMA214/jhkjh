{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Aminne\\\\UpHabit\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const changeMonth = direction => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(currentDate.getMonth() + direction);\n    setCurrentDate(newDate);\n  };\n  const handleDateClick = day => {\n    setSelectedDate(day);\n    setIsModalOpen(true);\n  };\n  const renderDays = () => {\n    const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n    const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n    const days = [];\n    for (let i = 1; i <= lastDay.getDate(); i++) {\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `day ${i === selectedDate ? 'active' : ''}`,\n        onClick: () => handleDateClick(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this));\n    }\n    return days;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeMonth(-1),\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [months[currentDate.getMonth()], \" \", currentDate.getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeMonth(1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"days\",\n      children: renderDays()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Events for \", selectedDate, \" \", months[currentDate.getMonth()], \" \", currentDate.getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"SAq3KAap/2p97fcgLEAHP4giVsk=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calendar","_s","currentDate","setCurrentDate","Date","selectedDate","setSelectedDate","events","setEvents","isModalOpen","setIsModalOpen","months","changeMonth","direction","newDate","setMonth","getMonth","handleDateClick","day","renderDays","firstDay","getFullYear","lastDay","days","i","getDate","push","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Aminne/UpHabit/src/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./calendar.css\";\r\n\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const months = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\",\r\n  ];\r\n\r\n  const changeMonth = (direction) => {\r\n    const newDate = new Date(currentDate);\r\n    newDate.setMonth(currentDate.getMonth() + direction);\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  const handleDateClick = (day) => {\r\n    setSelectedDate(day);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const renderDays = () => {\r\n    const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n    const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\r\n    const days = [];\r\n\r\n    for (let i = 1; i <= lastDay.getDate(); i++) {\r\n      days.push(\r\n        <div\r\n          key={i}\r\n          className={`day ${i === selectedDate ? 'active' : ''}`}\r\n          onClick={() => handleDateClick(i)}\r\n        >\r\n          {i}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <div className=\"header\">\r\n        <button onClick={() => changeMonth(-1)}>Prev</button>\r\n        <div>{months[currentDate.getMonth()]} {currentDate.getFullYear()}</div>\r\n        <button onClick={() => changeMonth(1)}>Next</button>\r\n      </div>\r\n      <div className=\"days\">\r\n        {renderDays()}\r\n      </div>\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <h3>Events for {selectedDate} {months[currentDate.getMonth()]} {currentDate.getFullYear()}</h3>\r\n          {/* Render events for the selected day */}\r\n          <button onClick={() => setIsModalOpen(false)}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}